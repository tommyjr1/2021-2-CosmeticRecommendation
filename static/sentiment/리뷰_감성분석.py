# -*- coding: utf-8 -*-
"""리뷰 감성분석

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14UGI7fMuWXesRIlGgIArf0DqNpCiqtRq
"""

import pandas as pd

cosmetic=pd.read_csv('/content/drive/MyDrive/ourdata.csv')

cosmetic

import re

pattern1 = '[-=+,#/\?:;^$.A*"~%!\\\n\r\t▼♣§☆♡´∀｀ﾉ♥▲�▶＊━“”]'

!pip install PyKomoran

# 형태소분석기 불러오기 
from PyKomoran import *

# 코모란을 사용하기 위한 객체 만들기 
komoran = Komoran("EXP")

from tqdm import tqdm
tqdm.pandas()

cosmetic['review'] = cosmetic['review'].progress_map(lambda x:re.sub(pattern1, '', x).strip())

cosmetic['review']

dic_url = 'https://raw.githubusercontent.com/park1200656/KnuSentiLex/master/KnuSentiLex/data/SentiWord_info.json'
dic_df = pd.read_json(dic_url)

dic_new = pd.DataFrame(dic_df['word'])
dic_new['tags'] = 'NNP'
dic_new

dic_new.to_csv("custom_dict.txt", index=False, header=False, sep="\t")

komoran.set_user_dic("custom_dict.txt")

komoran.get_morphes_by_tags(cosmetic['review'][0]+"신세계", tag_list=['NNP'])

word_list = dic_df['word'].unique()

cosmetic['sent_score'] = cosmetic['review'].progress_map(lambda x:sum([dic_df[dic_df['word']==word]['polarity'].values[0] if word in word_list else 0 for word in x]))

cosmetic['word_count'] = cosmetic['review'].progress_map(lambda x:len(x))

cosmetic['sent_index'] = cosmetic['sent_score']/cosmetic['word_count']

cosmetic

cosmetic.to_csv('cosmetic_score.csv', encoding='utf-8-sig', index=False)

